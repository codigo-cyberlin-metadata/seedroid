/*buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.google.gms:google-services:3.0.0'
//        classpath "io.realm:realm-gradle-plugin:3.1.0"
    }
}*/
def GroupId = 'id.codigo.seedroid'
def ArtifactId = 'framework'
def Version = '1.0.0'
allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'com.android.library'
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'
    group='com.github.codigo-cyberlin-metadata'
//    apply plugin: 'realm-android'

    android {
        compileSdkVersion compileSdkVERSION
        buildToolsVersion buildToolVERSION
        defaultConfig {
            minSdkVersion minSdkVERSION
            targetSdkVersion targetSdkVERSION
            multiDexEnabled true
        }
        packagingOptions {
            pickFirst 'META-INF/LICENSE'
        }
        dataBinding {
            enabled = true
        }
    }
}

android {
    defaultConfig {
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:multidex:1.0.1'
    compile "com.android.support:appcompat-v7:${supportVERSION}"
    compile "com.android.support:design:${supportVERSION}"
    compile "com.android.support:cardview-v7:${supportVERSION}"
    compile "com.android.support:recyclerview-v7:${supportVERSION}"
    compile 'com.google.firebase:firebase-core:11.0.0'
    compile 'com.google.android.gms:play-services-tagmanager:11.0.0'
    compile 'com.google.android.gms:play-services-analytics:11.0.0'
    compile 'com.android.volley:volley:1.0.0'
    compile 'net.gotev:uploadservice:3.0.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.0.pr2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0.pr2'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'
    compile project(':seedroid-validator')
    //compile project(':squad')
}
publishing {
    publications {
        aar(MavenPublication) {
            groupId GroupId
            version Version
            artifactId ArtifactId
            // Tell maven to prepare the generated "*.aar" file for publishing

            /*pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }*/
            artifact("$buildDir/outputs/aar/framework-release.aar")
            //from components.java
        }
    }
}
artifactory {
    contextUrl = 'http://jfrog.cips.stg.codigo.id/artifactory'
    publish {
        repository {
            // The Artifactory repository key to publish to
            repoKey = 'libs-release-local'

            username = "admin"
            password = "APAoG25jnnv8nB31KDLvWxAPGmU"
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('aar')
            publishArtifacts = true

            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}
apply plugin: 'com.google.gms.google-services'

